#Telerilevamento geo-ecologico 2023/2024
#Alessandra Valenti Martinez

#The goal of this project is to observed how the vegetation cover changed before and after the volcanic eruption 
# occured in the Santa Cruz de la Palma Island in 2021


# First of all, we open the packages from our library:
library(ncdf4) 
library(raster) #needed for work with raster file
library(ggplot2) #needed for create graphics
library(RStoolbox) #needed for remote sensing image processing
library(viridis) #needed for plot the color palette
library(patchwork) #needed for multiframe graphics
library(sp)
library(sf)
library(tidyverse)
library(terra)


# Now we set our working directory:

setwd("C:/lab/Esame")

# Upload images -----

# The images come from Sentinel 2
# Layers <- 4 = NIR, 3 = red, 2 = green, 1 = blue

img_list <- list.files(pattern = "20200727T120331")
img_list

# Apply a function over a list or vector
import <- lapply(img_list, raster)  # to apply a function to many images of a list
import

# Stack vectors from a dataframe or list
img_2020_raw <- stack(import)
img_2020_raw  # 4 layers

# stacking vectors concatenates multiple vectors into a single vector

# Plot with RGB in a multiframe
par(mfrow = c(1,2)) # multiframe
plotRGB(img_2020_raw, 4, 3, 2, stretch = "Lin") # NIR
plotRGB(img_2020_raw, 3, 2, 1, stretch = "Lin") # natural colours

dev.off()

# Find the right coordinates to crop all the images 
plot(img_2020_raw[[3]])
img_2020_raw

# New coordinates
new_ext <- c(205000, 236000, 3150000, 3195000)

# Let's crop the image for the new coordinations
img_2020 <- crop(img_2020_raw, new_ext)
img_2020

# Let's look at the plot
plot(img_2020, main = "2020 IMAGE")

# Plot with RGB the cropped image
par(mfrow = c(1,2))
plotRGB(img_2020, 4, 3, 2, stretch = "Lin") # NIR
plotRGB(img_2020, 3, 2, 1, stretch = "Lin") # natural colours

img_2020

install.packages("RStoolbox")

# Other images: 2021-2023

# List of files

img_list_21 <- list.files(pattern = "20210612T120321")
img_list_22 <- list.files(pattern = "20220607T120331")
img_list_23 <- list.files(pattern = "20230712T120331")

# Apply a function over a list or vector
import_21 <- lapply(img_list_21, raster)
import_22 <- lapply(img_list_22, raster)
import_23 <- lapply(img_list_23, raster)

# Stack vectors from a dataframe or list
img_2021_raw <- stack(import_21)
img_2022_raw <- stack(import_22)
img_2023_raw <- stack(import_23)

# Let's crop the image based on the coordinates chosen previously
img_2021 <- crop(img_2021_raw, new_ext)
img_2022 <- crop(img_2022_raw, new_ext)
img_2023 <- crop(img_2023_raw, new_ext)

# Plot with RGB the cropped images
plotRGB(img_2021, 4, 3, 2, stretch = "Lin") # NIR
plotRGB(img_2021, 3, 2, 1, stretch = "Lin") # natural colours

plotRGB(img_2022, 4, 3, 2, stretch = "Lin") # NIR
plotRGB(img_2022, 3, 2, 1, stretch = "Lin") # natural colours

plotRGB(img_2023, 4, 3, 2, stretch = "Lin") # NIR
plotRGB(img_2023, 3, 2, 1, stretch = "Lin") # natural colours

dev.off()

########################################################################
# FCOVER

# Calculate FCOVER
# FCOVER is a metric for quantifying the fraction of vegetation of an area
# range from 0 to +1
# We get the data from Copernicus

fcover2020 <- rast ("fcover2020.nc")
fcover2021 <- rast ("fcover2021.nc")
fcover2022 <- rast ("fcover2022.nc")
fcover2023 <- rast ("fcover2023.nc")


# Now let's crop the data to only look at our area
new_ext <- c (-18.0106, -17.7140, 28.4404, 28.8565)
fcover2020_newext <- crop(fcover2020, new_ext)
fcover2021_newext <- crop(fcover2021, new_ext)
fcover2022_newext <- crop(fcover2022, new_ext)
fcover2023_newext <- crop(fcover2023, new_ext)

fcover2020_newext

# Now let's plot the graphs

#2020
fcover2020_gg <-ggplot() + 
    geom_raster(fcover2020_newext, mapping = aes(x=x,  y = y, fill = FCOVER)) +
    scale_fill_viridis(option = "magma") +
    ggtitle("2020 fcover")


#Let's add the legend
fcover2020_gg <- fcover2020_gg + labs(fill= "fcover")
fcover2020_gg

#Let's save the new plot
ggsave(filename= "fcover2020.png", plot = fcover2020_gg)

#Now let's repeat for the other years
#2021
fcover2021_gg <-ggplot() + 
  geom_raster(fcover2021_newext, mapping = aes(x=x,  y = y, fill = FCOVER)) +
  scale_fill_viridis(option = "magma") +
  ggtitle("2021 fcover") 

#Let's add the legend
fcover2021_gg <- fcover2021_gg + labs(fill= "fcover")
fcover2021_gg

#Let's save the new plot
ggsave(filename= "fcover2021.png", plot = fcover2021_gg)

#2022
fcover2022_gg <-ggplot() + 
  geom_raster(fcover2022_newext, mapping = aes(x=x,  y = y, fill = FCOVER)) +
  scale_fill_viridis(option = "magma") +
  ggtitle("2022 fcover")

#Let's add the legend
fcover2022_gg <- fcover2022_gg + labs(fill= "fcover")
fcover2022_gg

#Let's save the new plot
ggsave(filename= "fcover2022.png", plot = fcover2022_gg)

#2023
fcover2023_gg <-ggplot() + 
  geom_raster(fcover2023_newext, mapping = aes(x=x,  y = y, fill = FCOVER)) +
  scale_fill_viridis(option = "magma") +
  ggtitle("2023 fcover")

#Let's add the legend
fcover2023_gg <- fcover2023_gg + labs(fill= "fcover")
fcover2023_gg

#Let's save the new plot
ggsave(filename= "fcover2023.png", plot = fcover2023_gg)

# Now let's look at all the plots together to compare them
fcover_comparison <- fcover2020_gg + fcover2021_gg + fcover2022_gg + fcover2023_gg
fcover_comparison

ggsave(filename = "fcover_comparison.png", plot = fcover_comparison)

###################################################################################

# Now let's look at the temporal difference between 2020-2023
rlist <- list.files(pattern= ".nc")
rlist 

import <- lapply(rlist, raster)
import


# Let's stack the data:
fcoverstacked <- stack(import)
fcoverstacked

#Let's crop the data
fcoverstacked_newext <- crop(fcoverstacked, new_ext)
fcoverstacked_newext

plot(fcoverstacked_newext)

#Now let's look at the difference between 2023 and 2020
fcover_difference <- fcoverstacked_newext[[4]]-fcoverstacked_newext[[1]]
fcover_difference
fcover_difference_df <- as.data.frame(fcover_difference, xy = TRUE)

fcoverdifference_plot <-ggplot() + 
  geom_raster(fcover_difference_df, mapping = aes(x=x,  y = y, fill = layer)) +
  scale_fill_viridis(option = "magma") +
  ggtitle("Difference in Fraction of Green Vegetation Cover") 

fcoverdifference_plot


#Let's look at the graphical representation of the trend of NDVI between 2020 and 2023
fcovertrend <- plot(fcover2020_newext, fcover2023_newext, xlab="fcover 2020", ylab="fcover 2023", main="Trend of fcover")
abline(0,1, col="red")

####################################################################

# Now let's do the same for the LAI
# Calculate LAI
# LAI is a metric for quantifying the leaf area index of an area
# range from 0 to +âˆž
# We get the data from Copernicus

lai_2020 <- rast ("lai_2020.nc")
lai_2021 <- rast ("lai_2021.nc")
lai_2022 <- rast ("lai_2022.nc")
lai_2023 <- rast ("lai_2023.nc")

# Now let's crop the data to only look at our area
new_ext <- c (-18.0106, -17.7140, 28.4404, 28.8565)
lai_2020_newext <- crop(lai_2020, new_ext)
lai_2021_newext <- crop(lai_2021, new_ext)
lai_2022_newext <- crop(lai_2022, new_ext)
lai_2023_newext <- crop(lai_2023, new_ext)
lai_2020_newext

# Now let's plot the graphs
#2020
lai_2020_gg <-ggplot() + 
  geom_raster(lai_2020_newext, mapping = aes(x=x,  y = y, fill = LAI )) +
  scale_fill_viridis(option = "magma") +
  ggtitle("2020 LAI") 


# Let's add the legend
lai_2020_gg <- lai_2020_gg + labs(fill= "LAI")
lai_2020_gg

# Let's save the new plot
ggsave(filename= "lai_2020.png", plot = lai_2020_gg)

# Now let's repeat for the other years
#2021
lai_2021_gg <-ggplot() + 
  geom_raster(lai_2021_newext, mapping = aes(x=x,  y = y, fill = LAI )) +
  scale_fill_viridis(option = "magma") +
  ggtitle("2021 LAI") 

# Let's add the legend
lai_2021_gg <- lai_2021_gg + labs(fill= "LAI")
lai_2021_gg

# Let's save the new plot
ggsave(filename= "lai_2021.png", plot = lai_2021_gg)

#2022
lai_2022_gg <-ggplot() + 
  geom_raster(lai_2022_newext, mapping = aes(x=x,  y = y, fill = LAI )) +
  scale_fill_viridis(option = "magma") +
  ggtitle("2022 LAI") 

# Let's add the legend
lai_2022_gg <- lai_2022_gg + labs(fill= "LAI")
lai_2022_gg

# Let's save the new plot
ggsave(filename= "lai_2022.png", plot = lai_2022_gg)

#2023
lai_2023_gg <-ggplot() + 
  geom_raster(lai_2023_newext, mapping = aes(x=x,  y = y, fill = LAI )) +
  scale_fill_viridis(option = "magma") +
  ggtitle("2023 LAI") 

# Let's add the legend
lai_2023_gg <- lai_2023_gg + labs(fill= "LAI")
lai_2023_gg

# Let's save the new plot
ggsave(filename= "lai_2023.png", plot = lai_2023_gg)

# Now let's look at all the plots together to compare them
lai_comparison <- lai_2020_gg + lai_2021_gg + lai_2022_gg + lai_2023_gg
lai_comparison

ggsave(filename = "lai_comparison.png", plot = lai_comparison)

###################################################################################

# Now let's look at the temporal difference between 2020-2023
rlist <- list.files(pattern= "lai_2")
rlist 

import <- lapply(rlist, raster)
import

# Let's stack the data:
laistacked <- stack(import)
laistacked

# Let's crop the data
laistacked_newext <- crop(laistacked, new_ext)
laistacked_newext

plot(laistacked_newext)

# Now let's look at the difference between 2023 and 2020
lai_difference <- laistacked_newext[[4]]-laistacked_newext[[1]]

laidifference_plot <- ggplot() + geom_raster(lai_difference, mapping=aes(x=x, y=y, fill= )) + scale_fill_viridis(option="rocket") + ggtitle("LAI difference")
laidifference_plot

# Let's look at the graphical representation of the trend of LAI between 2020 and 2023
lai_trend <- plot(lai_2020_newext, lai_2023_newext, xlab="LAI 2020", ylab="LAI 2023", main="Trend of LAI")
abline(0,1, col="red")

###################################################################################
# Finally, let's look at the correlation trend between LAI and FCOVER for all years:

# 2020
trend2020 <- plot(fcover2020_newext, lai2020_newext, xlab="FCOVER 2020", ylab="LAI 2020", main="2020 trend")
abline(0,1, col="red")

# 2021
trend2021 <- plot(fcover2021_newext, lai2021_newext, xlab="FCOVER 2021", ylab="LAI 2021", main="2021 trend")
abline(0,1, col="red")

# 2022
trend2022 <- plot(fcover2022_newext, lai2022_newext, xlab="FCOVER 2022", ylab="LAI 2022", main="2022 trend")
abline(0,1, col="red")

# 2023
trend2023 <- plot(fcover2023_newext, lai2023_newext, xlab="FCOVER 2023", ylab="LAI 2023", main="2023 trend")
abline(0,1, col="red")

# Difference
trend3 <- plot(fcover_difference, lai_difference, xlab="FCOVER difference", ylab="LAI difference", main="Difference trend")
abline(0,1, col="red")
